################################################################################
#
# This configuration file is an adaptation from
# http://docs.gunicorn.org/en/latest/deploy.html
#
################################################################################

worker_processes 1;

# 'user nobody nogroup;' for systems with 'nobody' as a group instead
user nobody nobody;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
    # 'use epoll;' to enable for Linux 2.6+
    # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    include mime.types;
    # fallback in case we can't determine a type
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    sendfile on;

    #
    # Define a group of servers, in which each line represents a server that is
    # accessed in a round-robin balancing method. If an error occurs during
    # communication with a server, the request will be passed to the next
    # server, and so on.
    #
    # Here, we only define one server within the group.
    #
    upstream app_server {
        # Here, 'fail_timeout=0' means we always retry an upstream even if it
        # failed to return a good HTTP response
        server webapp_application:5000 fail_timeout=0;
    }

    #
    # Define the virtual servers below. Nginx will only look at the request's
    # "Host" header field to decide which server directive to use, based on the
    # server_name.
    #
    # Here, we only define a single virtual server that listens on port 80.
    #
    server {
        # Set the address and port for the IP on which th eserver will accept
        # requests.
        #
        # Examples:
        #   listen 127.0.0.1:8000;
        #   listen 127.0.0.1;
        #   listen 8000;
        #   listen *:8000;
        #   listen localhost:8000;
        listen *:80;

        # Maximum allowed size of the client request body, as would be specified
        # in the 'Content-Length' request header field. If the size in a request
        # exceeds the configured value, the 413 (Request Entity Too Large) error
        # is returned to the client. Setting the value to 0 disables checking of
        # the client request body size.
        client_max_body_size 5M;

        # Set the name of the virtual server.
        # e.g. For IP: server_name 175.2.53.55;
        # e.g. For domain: server_name example.com www.example.com;
        server_name example.com *.example.com;

        keepalive_timeout 5;

        location / {
            #
            # Redefine the request body HTTP header values passed to the
            # proxied server.
            #

            # Set to the server name matching the request
            proxy_set_header Host $host;

            # Set the originating IP address of a client.
            # $remote_addr is the client address.
            proxy_set_header X-Real-IP $remote_addr;

            # Set the originating IP address of a client that's connecting
            # through this proxy server.
            # $proxy_add_x_forwarded for is equal to $remote_addr if the
            # 'X-Forwarded-For' field was not present in the client request.
            # Otherwise, it is the same as used by the client, with the
            # $remote_addr appended to it.
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Set the original host requested by a client to the server name.
            # $server_name is set within this directive.
            proxy_set_header X-Forwarded-Host $server_name;

            # Set the request protocol requested by a client.
            # $scheme is 'http' or 'https'.
            proxy_set_header X-Forwarded-Proto $scheme;

            # We don't want nginx trying to do something clever with
            # redirects, we already set the 'Host' header above already.
            proxy_redirect off;

            # Set the protocol ('http' or 'https') and address of a proxied
            # server an optional URI path to which a location should be mapped.
            proxy_pass http://app_server;
        }
    }
}

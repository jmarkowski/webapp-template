version: '3.7'

services:

  reverse_proxy:
    image: nginx:1.19.0
    container_name: ${WEBAPP}_reverse_proxy
    restart: always
    volumes:
      - './reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro'
    ports:
      - ${HOST_HTTP_PORT}:80
    networks:
      - webapp_network
    depends_on:
      - application

  application:
    build: ./application
    container_name: ${WEBAPP}_application
    restart: always
    volumes:
        - './application:/home/webapp'
    environment:
        # Do not set this variable if you do not want real-time changes to take
        # effect. Note: This expects the volume to be used as well!
        RELOAD_ARG: '--reload'
        APP_CONFIG: ${APP_CONFIG}
    networks:
      - webapp_network
    depends_on:
      - sql_database

  sql_database:
    image: postgres:12.3
    container_name: ${WEBAPP}_sql_database
    restart: always
    volumes:
      - './data/postgresql:/var/lib/postgresql/data'
    environment:
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB=${WEBAPP}_db
    secrets:
      - postgres_user
      - postgres_password
    networks:
      - webapp_network

  sql_adminstration:
    image: adminer:4.7.7
    container_name: ${WEBAPP}_sql_administration
    restart: always
    ports:
      - ${HOST_SQL_ADMIN_PORT}:8080
    environment:
      # Avaialble designs: https://github.com/vrana/adminer/tree/master/designs
      ADMINER_DESIGN: 'nette'
    networks:
      - webapp_network
    depends_on:
      - sql_database

secrets:
  postgres_user:
    file: ./secrets/postgres_user.txt
  postgres_password:
    file: ./secrets/postgres_password.txt

networks:
  webapp_network:
    name: ${WEBAPP}_network
    driver: bridge

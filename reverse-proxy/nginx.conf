################################################################################
#
# This configuration file is an adaptation from
# http://docs.gunicorn.org/en/latest/deploy.html
#
################################################################################

worker_processes 1;

# 'user nobody nogroup;' for systems with 'nobody' as a group instead
user nobody nobody;

error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024; # increase if you have lots of clients
    accept_mutex off; # set to 'on' if nginx worker_processes > 1
    # 'use epoll;' to enable for Linux 2.6+
    # 'use kqueue;' to enable for FreeBSD, OSX
}

http {
    include mime.types;
    # fallback in case we can't determine a type
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log combined;
    sendfile on;

    upstream app_server {
        # Here, 'fail_timeout=0' means we always retry an upstream even if it
        # failed to return a good HTTP response
        #
        # Also, '172.0.1.2:8000' happened to match the container IP for my
        # webapp. If you're running multiple containers, you'll have to change
        # this (this is because we don't *yet* have a docker compose file that
        # handles the routing mesh network :))
        server 172.17.0.2:5000 fail_timeout=0;
    }

    server {
        listen 80;
        client_max_body_size 4G;

        # set the correct host(s) for your site
        # e.g. For IP: server_name 175.2.53.55;
        # e.g. For domain: server_name example.com www.example.com;
        server_name example.com www.example.com;

        keepalive_timeout 5;

        location / {
            # Set to the server name matching the request
            proxy_set_header  Host $host;

            # Set to the client address
            proxy_set_header  X-Real-IP $remote_addr;

            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;

            # Set to the name of the server which accepted a request
            proxy_set_header  X-Forwarded-Host $server_name;

            # Set the request scheme: "http" or "https"
            proxy_set_header  X-Forwarded-Proto $scheme;

            # We don't want nginx trying to do something clever with
            # redirects, we already set the 'Host' header above already.
            proxy_redirect    off;
            proxy_pass        http://app_server;
        }
    }
}
